<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch"/>

  <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find ros_control_gazebo_tests)/models/parallel_manipulator.urdf.xacro'" />

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model rr -param robot_description"/>

 <!-- ros_control settings -->
  <rosparam ns="parallel/ros_control">
    joint1_position_controller:
      type: effort_controllers/JointPositionController
      joint: joint1   <!-- 1.0 10 1000-->
      pid: {p: 1.0, i: 10, d: 100.0}
    joint2_position_controller:
      type: effort_controllers/JointPositionController
      joint: joint2
      pid: {p: 1.0, i: 10, d: 100.0}
    joint3_position_controller:
     type: effort_controllers/JointPositionController
     joint: joint3
     pid: {p: 1.0, i: 10, d: 100.0}
    joint4_position_controller:
     type: effort_controllers/JointPositionController
     joint: joint4
     pid: {p: 1.0, i: 10, d: 100.0}
    joint5_position_controller:
     type: effort_controllers/JointPositionController
     joint: joint5
     pid: {p: 1.0, i: 10, d: 100.0}

  </rosparam>

</launch>
